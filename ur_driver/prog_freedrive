set robotmode freedrive

def driverProg():
  HOSTNAME = "%(driver_hostname)s"
  MSG_OUT = 1
  MSG_QUIT = 2
  MSG_JOINT_STATES = 3
  MSG_MOVEJ = 4
  MSG_WAYPOINT_FINISHED = 5
  MSG_STOPJ = 6
  MSG_SERVOJ = 7
  MSG_MOVEL = 8
  MSG_TCP_STATE = 9
  MSG_SERVOC = 10
  MSG_FREEDRIVE = 11
  VAL_TRUE = 1
  VAL_FALSE = 0
  MULT_jointstate = 10000.0
  MULT_time = 1000000.0
  MULT_blend = 1000.0
  pi = 3.14159265359
  
  def send_out(msg):
    enter_critical
    socket_send_int(MSG_OUT)
    socket_send_string(msg)
    socket_send_string("~")
    exit_critical
  end
  
  def send_waypoint_finished(waypoint_id):
    enter_critical
    socket_send_int(MSG_WAYPOINT_FINISHED)
    socket_send_int(waypoint_id)
    exit_critical
  end
  
  thread statePublisherThread():
    def send_joint_state():
      q = get_joint_positions()
      qdot = get_joint_speeds()
      tau = get_joint_torques()
      enter_critical
      socket_send_int(MSG_JOINT_STATES)
      socket_send_int(floor(MULT_jointstate * q[0]))
      socket_send_int(floor(MULT_jointstate * q[1]))
      socket_send_int(floor(MULT_jointstate * q[2]))
      socket_send_int(floor(MULT_jointstate * q[3]))
      socket_send_int(floor(MULT_jointstate * q[4]))
      socket_send_int(floor(MULT_jointstate * q[5]))
      socket_send_int(floor(MULT_jointstate * qdot[0]))
      socket_send_int(floor(MULT_jointstate * qdot[1]))
      socket_send_int(floor(MULT_jointstate * qdot[2]))
      socket_send_int(floor(MULT_jointstate * qdot[3]))
      socket_send_int(floor(MULT_jointstate * qdot[4]))
      socket_send_int(floor(MULT_jointstate * qdot[5]))
      socket_send_int(floor(MULT_jointstate * tau[0]))
      socket_send_int(floor(MULT_jointstate * tau[1]))
      socket_send_int(floor(MULT_jointstate * tau[2]))
      socket_send_int(floor(MULT_jointstate * tau[3]))
      socket_send_int(floor(MULT_jointstate * tau[4]))
      socket_send_int(floor(MULT_jointstate * tau[5]))
      #socket_send_int(7895160)  # Recognizable  ".xxx" or 00787878
      exit_critical
    end
    #socket_open(HOSTNAME, 50002)
    send_joint_state()
    while True:
      send_joint_state()
      sync()
    end
    sync()
  end

  thread tcpStatePublisherThread():
    def send_tcp_state():
      p = get_actual_tcp_pose()
      enter_critical
      socket_send_int(MSG_TCP_STATE)
      socket_send_int(floor(MULT_jointstate * p[0]))
      socket_send_int(floor(MULT_jointstate * p[1]))
      socket_send_int(floor(MULT_jointstate * p[2]))
      socket_send_int(floor(MULT_jointstate * p[3]))
      socket_send_int(floor(MULT_jointstate * p[4]))
      socket_send_int(floor(MULT_jointstate * p[5]))
      #socket_send_int(7895160)  # Recognizable  ".xxx" or 00787878
      exit_critical
    end
    #socket_open(HOSTNAME, 50002)
    send_tcp_state()
    while True:
      send_tcp_state()
      sync()
    end
    sync()
  end

  socket_open(HOSTNAME, 50001)
  send_out("Robot Communicating Properly over PORT 50001")

  thread_state = run statePublisherThread()
  thread_tcp = run tcpStatePublisherThread()

  while True:
    #send_out("Listening")
    ll = socket_read_binary_integer(1)

    if ll[0] == 0:
      #send_out("Received nothing")
    elif ll[0] > 1:
      send_out("Received too many things")
    else:
      mtype = ll[1]

      if mtype == MSG_QUIT:
        send_out("Received QUIT")
        break
      elif mtype == MSG_STOPJ:
        send_out("Received stopj")
        stopj(1.0)
      else:
        send_out("Received unknown message type")
      end
    end
  end

  #sleep(1)
  kill thread_state
  kill thread_servo
  kill thread_tcp
  socket_send_int(MSG_QUIT)
end

# driverProg()
